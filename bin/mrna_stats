#! /usr/bin/ruby
#
#  Get statistics on mRNA 
#
#  Copyright (C) 2013 Pjotr Prins <pjotr.prins@thebird.nl> 
#

PROG_VERSION='mrna_stats 0.04 (March 2013) Copyright (C) 2013 Pjotr Prins <pjotr.prins@thebird.nl>'

srcpath=File.dirname(File.dirname(__FILE__))
libpath=srcpath+'/lib/ruby/biotools'
$: << libpath
 
require 'optparse'
require 'ostruct'

print "#{PROG_VERSION}\n"

usage = <<USAGE

    Get mRNA statistics - nucleotide content, codon use
    and RNAfold energy levels. Takes a fasta file, or a two column with
    ID and sequence 

  usage:

    Use --help for more information

USAGE

print(usage) if ARGV.size == 0

$options = OpenStruct.new()

$options.warning_level = 0
$options.seqinfo_fn = nil
$options.templist = [ 20, 37 ]
$options.stepsize = 10
$options.stepnum  = 10

opts = OptionParser.new do |opts|
  opts.on_tail("-h", "--help", "Print this message") {
    print(usage)
    print(opts)
    print <<EXAMPLE
    
Examples:

    mrna_stats [OPTIONS] nuc.fa 
    
EXAMPLE
    exit()
  }
  opts.on '--temp=list', Array, "List of ambient temperatures (default 20,37)" do | list |
    $options.templist = list
  end
  opts.on '--nofold', "Skip folding" do
    $options.no_fold = true
  end
  opts.on '--debug', "Debug info" do 
    $debug = true
  end
  # opts.on '--stepsize=size', Integer, 'Step size (default 10)' do | stepsize |
  #   $options.stepsize = stepsize
  # end
  # opts.on '--stepnum=num', Integer, 'Step size (default 10, zero is full length)' do | stepnum |
  #   $options.stepnum = stepnum
  # end
end
opts.parse!(ARGV)

# require 'utr'
require 'rnastats'

if ARGV.size != 1
  p ARGV
  raise 'Missing input file name' 
end
fn = ARGV[0]

print "Reading #{fn}\n"

is_fasta = fn =~ /\.(fa|FA)/
if is_fasta
  require 'bigbio'
  mrnas = FastaReader.new(fn, :index=>true, :regex => '^(\w+)')
else
  require 'tabreader'
  mrnas = TabReader.new(fn)
end

# print "Reading #{$options.seqinfo_fn}\n"
# info = FastaReader.new($options.seqinfo_fn)

# utr3 = UTR.new(info,'3')
# utr5 = UTR.new(info,'5')
utr3 = utr5 = nil

first = true
mrnas.each do | mrna |
  if first
    RNAStats.new(mrna,nil,nil,$options.templist,$options.stepsize,$options.stepnum,$options.no_fold).print_title
    first = false
  end
  stats = RNAStats.new(mrna,utr5,utr3,$options.templist,$options.stepsize,$options.stepnum,$options.no_fold)
  stats.pretty_print
end

